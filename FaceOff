#!/bin/bash

################################################################################
#
# PREPARATIONS
#
################################################################################

if [[ ${#ANTSPATH} -le 3 ]]; then
    setPath >&2
fi

ANTS=${ANTSPATH}/antsRegistration

if [[ ! -s ${ANTS} ]]; then
    echo "antsRegistration can't be found. Please (re)define $ANTSPATH in your environment."
    exit
fi

SCRIPT_LOCATION=$(which FaceOff)
SCRIPT_DIR=$(dirname "${SCRIPT_LOCATION}")
TEMPLATE_DIR="${SCRIPT_DIR}/tempData"

################################################################################
# Simple formatting

bold=$(tput bold)
normal=$(tput sgr0)

################################################################################

function Help() {
    cat <<HELP

Usage:

$(basename $0) ${bold}-i${normal} T1w_image.nii.gz ${bold}-n${normal} number of threads

--------------------------------------------------------------------------------
Input arguments:

     -i:  T1w input dataset (e.g. T1w.nii.gz)

     -n:  number of threads (default = 12)

--------------------------------------------------------------------------------

Example:

$(basename $0) -i T1w.nii.gz -n 12

--------------------------------------------------------------------------------
Script was created by: Sriranga Kashyap (03-2020)
--------------------------------------------------------------------------------
Requires ANTs to be installed and $ANTSPATH defined in your environment.
--------------------------------------------------------------------------------
ANTs can be downloaded here: https://github.com/ANTsX/ANTs
References:
    1) http://www.ncbi.nlm.nih.gov/pubmed/20851191
    2) http://www.frontiersin.org/Journal/10.3389/fninf.2013.00039/abstract
--------------------------------------------------------------------------------

HELP
    exit 1
}

################################################################################

function reportParameters() {
    cat <<REPORTPARAMETERS

--------------------------------------------------------------------------------
    ${bold} 0. Initialised with $n_threads threads ${normal}
--------------------------------------------------------------------------------
    ANTs installation found :   ${bold} $ANTSPATH ${normal} 
    FaceOff location        :   ${bold} $SCRIPT_DIR ${normal}
    Input data              :   ${bold} $input_file ${normal}
    Deface mask (output)    :   ${bold} $OUTPUT_MASK_NAME ${normal}
    Defaced data (output)   :   ${bold} $OUTPUT_NAME ${normal}
--------------------------------------------------------------------------------

REPORTPARAMETERS
}

################################################################################

if [[ "$1" == "-h" || $# -eq 0 ]]; then
    Help >&2
fi

################################################################################
#
# DEFAULTS
#
################################################################################

interpolation_type=GenericLabel
n_threads=12

################################################################################
#
# PARSE INPUT ARGUMENTS
#
################################################################################

while getopts "i:n:" OPT; do
    case $OPT in
    h) #help
        Help
        exit 0
        ;;
    i) # input
        input_file=$OPTARG
        ;;
    n) # transformation type
        n_threads=$OPTARG
        ;;
    \?) # report error
        echo "$HELP" >&2
        exit 1
        ;;
    esac
done

################################################################################
#
# SET NUMBER OF THREADS
#
################################################################################

ORIGINALNUMBEROFTHREADS=${ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS}
ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=$n_threads
export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS

################################################################################
#
# NO COMPRESSION PERHAPS
#
################################################################################

if [ "${input_file#*.}" == "nii" ]; then

    OUTPUT_MASK_NAME=${input_file%.*}_defaceMask.nii
    OUTPUT_NAME=${input_file%.*}_defaced.nii

else

    OUTPUT_MASK_NAME=${input_file%.*.*}_defaceMask.nii.gz
    OUTPUT_NAME=${input_file%.*.*}_defaced.nii.gz

fi

################################################################################
#
# REPORT INPUT PARAMETERS
#
################################################################################

reportParameters

################################################################################
#
# MAP TO TEMPLATE
#
################################################################################

${ANTSPATH}/antsRegistration \
    --verbose 0 \
    --random-seed 42 \
    --dimensionality 3 \
    --float 0 \
    --collapse-output-transforms 1 \
    --output [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_ , 1 , 1 ] \
    --interpolation BSpline[4] \
    --use-histogram-matching 1 \
    --winsorize-image-intensities [ 0.005,0.995 ] \
    --masks [ $TEMPLATE_DIR/OASIS_registrationMask.nii.gz , 1 ] \
    --initial-moving-transform [ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 ] \
    --transform Rigid[ 0.1 ] \
    --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
    --convergence [ 1000x500x250x0,1e-6,10 ] \
    --shrink-factors 12x8x4x2 \
    --smoothing-sigmas 4x3x2x1vox \
    --transform Affine[ 0.1 ] \
    --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
    --convergence [ 1000x500x250x0,1e-6,10 ] \
    --shrink-factors 12x8x4x2 \
    --smoothing-sigmas 4x3x2x1vox \
    --transform BSplineSyN[ 0.1,26,0,3 ] \
    --metric MI[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 ] \
    --convergence [ 100x100x70x50x0,1e-6,10 ] \
    --shrink-factors 10x6x4x2x1 \
    --smoothing-sigmas 5x3x2x1x0vox

echo "  ${bold} 1. Mapped to template.    ${normal}"
echo "--------------------------------------------------------------------------------"

################################################################################
#
# APPLY TRANSFORMS
#
################################################################################

${ANTSPATH}/antsApplyTransforms \
    --dimensionality 3 \
    --interpolation GenericLabel \
    --reference-image $input_file \
    --input $TEMPLATE_DIR/OASIS_defaceMask.nii.gz \
    --output $OUTPUT_MASK_NAME \
    --transform $TEMPLATE_DIR/REG_INPUT_TO_TEMP_1InverseWarp.nii.gz \
    --transform [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_0GenericAffine.mat , 1 ] \
    --verbose 0

echo "  ${bold} 2. Deface mask created.    ${normal}"
echo "--------------------------------------------------------------------------------"

${ANTSPATH}/ImageMath \
    3 \
    $OUTPUT_NAME \
    m \
    $input_file \
    $OUTPUT_MASK_NAME

echo "  ${bold} 3. Defacing completed.    ${normal}"
echo "--------------------------------------------------------------------------------"


################################################################################
#
# CLEAN UP
#
################################################################################

rm $TEMPLATE_DIR/REG_INPUT_TO_TEMP_*.*

################################################################################
#
# DISPLAY DONE
#
################################################################################

echo "  ${bold} 4. FaceOff ended.    ${normal}"
echo "================================================================================"
